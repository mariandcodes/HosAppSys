CREATE DATABASE HospitalDB;

CREATE TABLE Roles (
    RoleID INT PRIMARY KEY,
    Role_Name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE Users (
    UserID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(50) NOT NULL,
    RoleID INT,
    status VARCHAR(100),
    created_at VARCHAR(50),
    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)
);

DROP TABLE USERS;


CREATE TABLE Patients (
    PatientID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    UserID INT,
    P_Name VARCHAR(50),
    P_DOB DATE,
    P_Gender VARCHAR(10),
    P_Contact VARCHAR(20),
    P_Address VARCHAR(200),
    Insurance_Provider VARCHAR(200),
    Insurance_Policy VARCHAR(50),
    Status VARCHAR(100),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Doctors (
    DoctorID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    UserID INT NOT NULL,
    D_Name VARCHAR(100) NOT NULL,
    Specialty VARCHAR(100),
    Qualifications VARCHAR(200),
    D_Contact VARCHAR(20),
    Consultation_Fee DECIMAL(10,2),
    Status VARCHAR(50),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE ClinicLocations (
    LocationID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    C_Name VARCHAR(100) NOT NULL,
    C_Address VARCHAR(200) NOT NULL,
    Phone VARCHAR(20)
);

CREATE TABLE DoctorSchedules (
    ScheduleID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    DoctorID INT NOT NULL,
    day_of_week VARCHAR(15) NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    slot_duration_minutes INT NOT NULL,
    location_id INT NOT NULL,
    FOREIGN KEY (DoctorID) REFERENCES Doctors(DoctorID),
    FOREIGN KEY (location_id) REFERENCES ClinicLocations(LocationID)
);

CREATE TABLE Appointments (
    AppointmentID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    PatientID INT NOT NULL,
    DoctorID INT NOT NULL,
    scheduled_datetime TIMESTAMP NOT NULL,
    StatusID INT,
    reason VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    FOREIGN KEY (PatientID) REFERENCES Patients(PatientID),
    FOREIGN KEY (DoctorID) REFERENCES Doctors(DoctorID),
    FOREIGN KEY (StatusID) REFERENCES AppointmentStatuses(StatusID)
);


CREATE TABLE AppointmentStatuses (
    StatusID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    StatusName VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE WaitListEntries (
    WaitListID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    PatientID INT NOT NULL,
    DoctorID INT NOT NULL,
    requested_date DATE NOT NULL,
    position INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PatientID) REFERENCES Patients(PatientID),
    FOREIGN KEY (DoctorID) REFERENCES Doctors(DoctorID)
);

CREATE TABLE Notifications (
    NotificationID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    UserID INT NOT NULL,
    type VARCHAR(50) NOT NULL,          -- e.g., 'Reminder', 'Update', 'Alert'
    content VARCHAR(255) NOT NULL,      -- Message body
    is_read BOOLEAN DEFAULT FALSE,      -- True if user has read the notification
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);
